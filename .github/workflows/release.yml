---
name: Release

on:
  push:
    tags:
      - v*

env:
  IMAGE_NAME: ghtoken_product_demo
  CI: true
  NODE_ENV: test
  NODE_OPTIONS: --max-old-space-size=4096
  GEMINI_TOKEN: ${{ secrets.GEMINI_API_KEY }}
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GITHUB_REPOSITORY: ${{ github.repository }}

jobs:
  release:
    name: Distribute
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Consume Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Build Source
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

      - name: Authenticate
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Deploy Image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag "$IMAGE_NAME" "$IMAGE_ID:$VERSION"
          docker push "$IMAGE_ID:$VERSION"
